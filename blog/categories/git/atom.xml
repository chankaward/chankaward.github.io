<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Happy Hacking]]></title>
  <link href="http://edward.sanwuist.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://edward.sanwuist.com/"/>
  <updated>2014-09-25T15:18:56+08:00</updated>
  <id>http://edward.sanwuist.com/</id>
  <author>
    <name><![CDATA[Edward Chan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[tig - text-mode interface for git]]></title>
    <link href="http://edward.sanwuist.com/blog/2014/09/25/tig-text-mode-interface-for-git/"/>
    <updated>2014-09-25T15:12:25+08:00</updated>
    <id>http://edward.sanwuist.com/blog/2014/09/25/tig-text-mode-interface-for-git</id>
    <content type="html"><![CDATA[<h2>What is Tig?</h2>

<p>Tig is an ncurses-based text-mode interface for git. It functions mainly as a Git repository browser, but can also assist in staging changes for commit at chunk level and act as a pager for output from various Git commands.</p>

<h2>Installation</h2>

<p>If you use OSX, you can easily use <code>homebrew</code> to install <code>tig</code>, just run
<code>
brew install tig
</code></p>

<h2>Usage</h2>

<p>Just type <code>tig</code> under your project directory with <code>git</code>
<code>
tig
</code></p>

<p><img src="https://raw.githubusercontent.com/chankaward/tig/master/ts-screenshoot.png" title="Optional title" alt="Alt text" /></p>

<p>Check the current changed</p>

<pre><code>tig status
</code></pre>

<ul>
<li><code>u</code> to move the changed file to the <code>staged</code>.</li>
<li><code>!</code> to discard file changed.</li>
<li><code>D</code> to delete untracked files.</li>
</ul>


<p><img src="https://raw.githubusercontent.com/chankaward/tig/master/tig-screenshoot.png" title="Optional title" alt="Alt text" /></p>

<h2>Configuration</h2>

<p>You can add a <code>.tigrc</code> file to your home directory for more custom configuration.</p>

<ul>
<li><p>Checkout my <code>tigrc</code> file on <a href="https://github.com/chankaward/.dotfile/blob/master/tigrc" target="_blank">Github</a>.</p></li>
<li><p>Find the origin file on <a href="https://github.com/jonas/tig/blob/master/tigrc" target="_blank"><a href="https://github.com/jonas/tig/blob/master/tigrc">https://github.com/jonas/tig/blob/master/tigrc</a></a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[custom subdomain in Octopress with Github page]]></title>
    <link href="http://edward.sanwuist.com/blog/2014/09/17/custom-subdomain-in-octopress-with-github-page/"/>
    <updated>2014-09-17T20:24:57+08:00</updated>
    <id>http://edward.sanwuist.com/blog/2014/09/17/custom-subdomain-in-octopress-with-github-page</id>
    <content type="html"><![CDATA[<p>Follow these step after you deploy your octopress to github page.</p>

<p>First, you need to create a file named <code>CNAME</code> in your blog&rsquo;s source:
<code>
echo 'subdomain.your-domain.com' &gt;&gt; source/CNAME
</code>
commit this file and deploy your changes.</p>

<p>Second, you must use an <code>A</code> record pointing to <code>192.30.252.153</code> or <code>192.30.252.154</code>, and use an <code>ALIAS</code> record put <code>subdomain.your-domain.com</code> point to <code>username.github.io</code>.</p>

<p>All done!</p>
]]></content>
  </entry>
  
</feed>
